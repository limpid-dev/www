/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/users": {
    post: {
      requestBody: {
        content: {
          "multipart/form-data": {
            email: string;
            password: string;
            first_name: string;
            last_name: string;
            patronymic: string;
            born_at: string;
          };
        };
      };
      responses: {
        /** @description User is created */
        201: {
          content: {
            "application/json": {
              data?: components["schemas"]["User"];
            };
          };
        };
      };
    };
  };
  "/session": {
    post: {
      requestBody: {
        content: {
          "multipart/form-data": {
            email: string;
            password: string;
          };
        };
      };
      responses: {
        /** @description User is logged in */
        201: {
          content: {
            "application/json": {
              data?: {
                type?: string;
                token?: string;
                expires_at?: string;
              };
            };
          };
        };
      };
    };
    delete: {
      responses: {
        /** @description User is logged out */
        204: never;
      };
    };
  };
  "/email-verification": {
    post: {
      requestBody: {
        content: {
          "multipart/form-data": {
            email: string;
          };
        };
      };
      responses: {
        /** @description User email verification mail send */
        201: never;
      };
    };
    patch: {
      requestBody: {
        content: {
          "multipart/form-data": {
            email: string;
            token: string;
          };
        };
      };
      responses: {
        /** @description User email verified */
        204: never;
      };
    };
  };
  "/password-recovery": {
    post: {
      requestBody: {
        content: {
          "multipart/form-data": {
            email: string;
          };
        };
      };
      responses: {
        /** @description Password recovery mail send */
        201: never;
      };
    };
    patch: {
      requestBody: {
        content: {
          "multipart/form-data": {
            email: string;
            password: string;
            token: string;
          };
        };
      };
      responses: {
        /** @description User's password is changed */
        204: never;
      };
    };
  };
  "/user": {
    get: {
      responses: {
        /** @description User data */
        200: {
          content: {
            "application/json": {
              data?: components["schemas"]["User"];
            };
          };
        };
      };
    };
    patch: {
      requestBody: {
        content: {
          "multipart/form-data": {
            email?: string;
            password?: string;
            selected_profile_id?: number;
            first_name?: string;
            last_name?: string;
            patronymic?: string;
            born_at?: string;
          };
        };
      };
      responses: {
        /** @description Updated user's data */
        200: {
          content: {
            "application/json": {
              data?: components["schemas"]["User"];
            };
          };
        };
      };
    };
  };
  "/profiles": {
    get: {
      parameters: {
        query: {
          page: number;
          per_page?: number;
          user_id?: number;
          industry?: string;
          search?: string;
        };
      };
      responses: {
        /** @description User's profiles */
        200: {
          content: {
            "application/json": {
              meta?: {
                total?: number;
                per_page?: number;
                current_page?: number;
                last_page?: number;
                first_page?: number;
                first_page_url?: string;
                last_page_url?: string;
                next_page_url?: string;
                previous_page_url?: string;
              };
              data?: components["schemas"]["Profile"][];
            };
          };
        };
      };
    };
    post: {
      requestBody: {
        content: {
          "multipart/form-data": {
            display_name: string;
            description: string;
            location: string;
            industry: string;
            owned_intellectual_resources?: string;
            owned_material_resources?: string;
            tin: string;
            is_visible: boolean;
            /** Format: binary */
            avatar?: string;
          };
        };
      };
      responses: {
        /** @description Profile is created */
        201: {
          content: {
            "application/json": {
              data?: components["schemas"]["Profile"];
            };
          };
        };
      };
    };
  };
  "/profiles/{profile_id}": {
    get: {
      parameters: {
        path: {
          profile_id: number;
        };
      };
      responses: {
        /** @description Profile data */
        200: {
          content: {
            "application/json": {
              data?: components["schemas"]["Profile"];
            };
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          profile_id: number;
        };
      };
      responses: {
        /** @description Profile is deleted */
        204: never;
      };
    };
    patch: {
      parameters: {
        path: {
          profile_id: number;
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            display_name?: string;
            description?: string;
            location?: string;
            industry?: string;
            owned_intellectual_resources?: string;
            owned_material_resources?: string;
            tin?: string;
            is_visible?: boolean;
            /** Format: binary */
            avatar?: string;
          };
        };
      };
      responses: {
        /** @description Updated profile's data */
        200: {
          content: {
            "application/json": {
              data?: components["schemas"]["Profile"];
            };
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    User: {
      id?: number;
      email?: string;
      first_name?: string;
      last_name?: string;
      password?: string;
      patronymic?: string;
      born_at?: string;
      email_verified_at?: string | null;
      created_at?: string;
      updated_at?: string;
    };
    Profile: {
      id?: number;
      user_id?: number;
      display_name?: string;
      description?: string;
      location?: string;
      industry?: string;
      owned_intellectual_resources?: string | null;
      owned_material_resources?: string | null;
      tin?: string;
      is_visible?: boolean;
      avatar?: string | null;
      tin_verified_at?: string | null;
      created_at?: string;
      updated_at?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export type operations = Record<string, never>;
